meta:
  name: A test spec

plan:
  - runner:
      description: This has some env variables mixed into cmd
      cmd: echo $BONZAI l$ANOTHERTIME env$VAR_NICE $CONTROLLER:$MODEL $CONTROLLER $MODEL
  - runner:
      description: Test ogc core
      cmd: pytest
      tags: [dist, clean]
      env-requires:
        - TEST_ENV
        - RUNNER_OPT
        - ANOTHER_OPT
  - runner:
      description: cleanup artifacts
      cmd: rm -rf build dist ogc.egg-info
      tags: [dist, clean]
  - runner:
      description: Bump revision
      cmd: punch --part patch
      tags: [bdist]
      assets:
        - name: pytest configuration
          source-file: data/pytest.ini
          destination: jobs/pytest.ini
          is-executable: no
  - runner:
      description: Build dist
      cmd: python3 setup.py bdist_wheel
      tags: [bdist]
      assets:
        - name: boom config
          source-file: data/boom.ini
          destiation: jobs/boom.ini
          is-executable: yes
  - runner:
      description: Upload dist
      cmd: twine upload dist/*
      tags: [bdist]
  - runner:
      description: |
        See https://www.cncf.io/certification/software-conformance/ for more information.
      script: |
        #!/bin/bash
        set -eux

        mkdir -p $HOME/.kube
        juju scp -m $JUJU_CONTROLLER:$JUJU_MODEL kubernetes-master/0:config $HOME/.kube/
        export RBAC_ENABLED=$(kubectl api-versions | grep \"rbac.authorization.k8s.io/v1beta1\" -c)
        kubectl version
        sonobuoy version
        sonobuoy run
      tags: [cncf, cncf-run]
  - runner:
      description: |
        checking for completeness
      cmd: sonobuoy status|grep -q 'Sonobuoy has completed'
      timeout: 10800
      back-off: 15
      wait-for-success: yes
      tags: [cncf, cncf-wait-status]
  - runner:
      description: Download results
      script: |
        #!/bin/bash
        set -eux
        sonobuoy retrieve results/.
        kubectl version
      wait-for-success: yes
      back-off: 5
      retries: 5
      tags: [cncf, cncf-download-results]
  - runner:
      description: Tearing down all deployed applications
      cmd: juju destroy-controller -y --destroy-all-models --destroy-storage $JUJU_CONTROLLER
      tags: [teardown]
